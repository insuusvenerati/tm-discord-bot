import { ModuleRef } from '@nestjs/core';
import { DiscordCommandProvider } from '../../providers/discord-command.provider';
import { ReflectMetadataProvider } from '../../providers/reflect-metadata.provider';
import { BuildApplicationCommandService } from '../../services/build-application-command.service';
import { ClientService } from '../../services/client.service';
import { CommandTreeService } from '../../services/command-tree.service';
import { CollectorExplorer } from '../collector/collector.explorer';
import { FilterExplorer } from '../filter/filter.explorer';
import { GuardExplorer } from '../guard/guard.explorer';
import { ClassExplorer } from '../interfaces/class-explorer';
import { ClassExplorerOptions } from '../interfaces/class-explorer-options';
import { MiddlewareExplorer } from '../middleware/middleware.explorer';
import { PipeExplorer } from '../pipe/pipe.explorer';
export declare class CommandExplorer implements ClassExplorer {
    private readonly discordClientService;
    private readonly metadataProvider;
    private readonly middlewareExplorer;
    private readonly discordCommandProvider;
    private readonly guardExplorer;
    private readonly moduleRef;
    private readonly pipeExplorer;
    private readonly buildApplicationCommandService;
    private readonly commandTreeService;
    private readonly filterExplorer;
    private readonly collectorExplorer;
    constructor(discordClientService: ClientService, metadataProvider: ReflectMetadataProvider, middlewareExplorer: MiddlewareExplorer, discordCommandProvider: DiscordCommandProvider, guardExplorer: GuardExplorer, moduleRef: ModuleRef, pipeExplorer: PipeExplorer, buildApplicationCommandService: BuildApplicationCommandService, commandTreeService: CommandTreeService, filterExplorer: FilterExplorer, collectorExplorer: CollectorExplorer);
    explore({ instance }: ClassExplorerOptions): Promise<void>;
    private collectorsIsInteraction;
    private collectorsIsMessage;
}
