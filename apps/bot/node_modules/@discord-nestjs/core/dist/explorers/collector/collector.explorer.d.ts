import { MetadataScanner } from '@nestjs/core';
import { Collector, InteractionCollector, Snowflake } from 'discord.js';
import { ReflectMetadataProvider } from '../../providers/reflect-metadata.provider';
import { InstantiationService } from '../../services/instantiation.service';
import { FilterExplorer } from '../filter/filter.explorer';
import { GuardExplorer } from '../guard/guard.explorer';
import { MethodExplorer } from '../interfaces/method-explorer';
import { MethodExplorerOptions } from '../interfaces/method-explorer-options';
import { MiddlewareExplorer } from '../middleware/middleware.explorer';
import { PipeExplorer } from '../pipe/pipe.explorer';
import { InteractionCollectorStrategy } from './strategy/interaction-collector.strategy';
import { MessageCollectorStrategy } from './strategy/message-collector.strategy';
import { ReactCollectorStrategy } from './strategy/react-collector.strategy';
import { UseCollectorApplyOptions } from './use-collector-apply-options';
export declare class CollectorExplorer implements MethodExplorer {
    private readonly metadataProvider;
    private readonly instantiationService;
    private readonly middlewareExplorer;
    private readonly guardExplorer;
    private readonly filterExplorer;
    private readonly pipeExplorer;
    private readonly metadataScanner;
    private readonly reactCollectorStrategy;
    private readonly interactionCollectorStrategy;
    private readonly messageCollectorStrategy;
    private readonly cachedCollectors;
    private readonly initCollectorInstances;
    constructor(metadataProvider: ReflectMetadataProvider, instantiationService: InstantiationService, middlewareExplorer: MiddlewareExplorer, guardExplorer: GuardExplorer, filterExplorer: FilterExplorer, pipeExplorer: PipeExplorer, metadataScanner: MetadataScanner, reactCollectorStrategy: ReactCollectorStrategy, interactionCollectorStrategy: InteractionCollectorStrategy, messageCollectorStrategy: MessageCollectorStrategy);
    explore({ instance, methodName, }: MethodExplorerOptions): Promise<void>;
    applyCollector<T>(options: UseCollectorApplyOptions): Promise<Collector<Snowflake, T>[] | undefined>;
    getInitCollectorInstances(): InteractionCollector<any>[];
    private getCollectorsInfo;
    private exploreBaseInfo;
    private getInstanceMethods;
    private findFilterMethod;
}
