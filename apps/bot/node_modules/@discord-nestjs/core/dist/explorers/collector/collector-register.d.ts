import { MetadataScanner, ModuleRef } from '@nestjs/core';
import { Collector } from 'discord.js';
import { ReflectMetadataProvider } from '../../providers/reflect-metadata.provider';
import { FilterExplorer } from '../filter/filter.explorer';
import { GuardExplorer } from '../guard/guard.explorer';
import { MiddlewareExplorer } from '../middleware/middleware.explorer';
import { PipeExplorer } from '../pipe/pipe.explorer';
import { CollectMethodEventsInfo } from './collect-method-events-info';
export declare class CollectorRegister {
    private readonly metadataProvider;
    private readonly metadataScanner;
    private readonly middlewareExplorer;
    private readonly guardExplorer;
    private readonly filterExplorer;
    private readonly pipeExplorer;
    constructor(metadataProvider: ReflectMetadataProvider, metadataScanner: MetadataScanner, middlewareExplorer: MiddlewareExplorer, guardExplorer: GuardExplorer, filterExplorer: FilterExplorer, pipeExplorer: PipeExplorer);
    subscribeToEvents(collector: Collector<any, any, any>, events: CollectMethodEventsInfo, classInstance: InstanceType<any>): void;
    registerRequest(moduleRef: ModuleRef, classInstance: InstanceType<any>, requestObject: unknown): Promise<InstanceType<any>>;
}
