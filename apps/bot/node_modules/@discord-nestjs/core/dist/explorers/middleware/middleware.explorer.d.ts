import { EventArgs, EventType } from '../../definitions/types/event.type';
import { ReflectMetadataProvider } from '../../providers/reflect-metadata.provider';
import { ClassExplorer } from '../interfaces/class-explorer';
import { ClassExplorerOptions } from '../interfaces/class-explorer-options';
export declare class MiddlewareExplorer implements ClassExplorer {
    private readonly metadataProvider;
    private readonly middlewareList;
    constructor(metadataProvider: ReflectMetadataProvider);
    explore(options: ClassExplorerOptions): void;
    applyMiddleware<TEvent extends EventType = EventType>(event: TEvent, eventArgs: EventArgs<TEvent>): Promise<void>;
    private instanceIsMiddleware;
}
