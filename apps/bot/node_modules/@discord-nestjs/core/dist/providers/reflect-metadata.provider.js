"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReflectMetadataProvider = void 0;
const common_1 = require("@nestjs/common");
const filter_constant_1 = require("../decorators/collector/filter/filter.constant");
const interaction_collector_constant_1 = require("../decorators/collector/interaction-collector/interaction-collector.constant");
const message_collector_constant_1 = require("../decorators/collector/message-collector/message-collector.constant");
const reaction_collector_constant_1 = require("../decorators/collector/reaction-collector/reaction-collector.constant");
const use_collectors_constant_1 = require("../decorators/collector/use-collectors/use-collectors.constant");
const command_constant_1 = require("../decorators/command/command.constant");
const on_constant_1 = require("../decorators/event/on/on.constant");
const once_constant_1 = require("../decorators/event/once/once.constant");
const catch_constant_1 = require("../decorators/filter/catch/catch.constant");
const use_filter_constant_1 = require("../decorators/filter/use-filter.constant");
const guard_constant_1 = require("../decorators/guard/guard.constant");
const middleware_constant_1 = require("../decorators/middleware/middleware.constant");
const field_constant_1 = require("../decorators/modal/field/field.constant");
const text_input_value_constant_1 = require("../decorators/modal/text-input-value/text-input-value.constant");
const channel_constant_1 = require("../decorators/option/channel/channel.constant");
const choice_constant_1 = require("../decorators/option/choice/choice.constant");
const param_constant_1 = require("../decorators/option/param/param.constant");
const payload_constant_1 = require("../decorators/param/payload/payload.constant");
const pipe_constant_1 = require("../decorators/pipe/pipe.constant");
const prefix_command_constant_1 = require("../decorators/prefix-command/prefix-command.constant");
const sub_command_constant_1 = require("../decorators/sub-command/sub-command.constant");
const arg_num_constant_1 = require("../decorators/transformation/arg-num/arg-num.constant");
const arg_range_constant_1 = require("../decorators/transformation/arg-range/arg-range.constant");
let ReflectMetadataProvider = class ReflectMetadataProvider {
    getCommandDecoratorMetadata(instance) {
        return Reflect.getMetadata(command_constant_1.COMMAND_DECORATOR, instance);
    }
    getSubCommandDecoratorMetadata(instance) {
        return Reflect.getMetadata(sub_command_constant_1.SUB_COMMAND_DECORATOR, instance);
    }
    getOnEventDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(on_constant_1.ON_DECORATOR, instance, methodName);
    }
    getOnceEventDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(once_constant_1.ONCE_DECORATOR, instance, methodName);
    }
    getOnCommandDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(prefix_command_constant_1.ON_PREFIX_COMMAND_DECORATOR, instance, methodName);
    }
    getArgNumDecoratorMetadata(instance, propertyKey) {
        return Reflect.getMetadata(arg_num_constant_1.ARG_NUM_DECORATOR, instance, propertyKey);
    }
    getArgRangeDecoratorMetadata(instance, propertyKey) {
        return Reflect.getMetadata(arg_range_constant_1.ARG_RANGE_DECORATOR, instance, propertyKey);
    }
    getOnCollectEventDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(on_constant_1.ON_COLLECT_DECORATOR, instance, methodName);
    }
    getOnceCollectEventDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(once_constant_1.ONCE_COLLECT_DECORATOR, instance, methodName);
    }
    getFilterDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(filter_constant_1.FILTER_METADATA, instance, methodName);
    }
    getMiddlewareDecoratorMetadata(instance) {
        return Reflect.getMetadata(middleware_constant_1.MIDDLEWARE_DECORATOR, instance);
    }
    getUseGuardsDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(guard_constant_1.USE_GUARDS_DECORATOR, instance, methodName);
    }
    getUsePipesDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(pipe_constant_1.USE_PIPES_DECORATOR, instance, methodName);
    }
    getUseFiltersDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(use_filter_constant_1.USE_FILTER_DECORATOR, instance, methodName);
    }
    getCatchDecoratorMetadata(instance) {
        return Reflect.getMetadata(catch_constant_1.CATCH_EXCEPTION_FILTER_DECORATOR, instance);
    }
    getParamTypesMetadata(instance, methodName) {
        return Reflect.getMetadata('design:paramtypes', instance, methodName);
    }
    getPropertyTypeMetadata(instance, methodName) {
        return Reflect.getMetadata('design:type', instance, methodName);
    }
    getPayloadDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(payload_constant_1.PAYLOAD_DECORATOR, instance, methodName);
    }
    getParamDecoratorMetadata(instance, propertyKey) {
        return Reflect.getMetadata(param_constant_1.PARAM_DECORATOR, instance, propertyKey);
    }
    getChoiceDecoratorMetadata(instance, propertyKey) {
        return Reflect.getMetadata(choice_constant_1.CHOICE_DECORATOR, instance, propertyKey);
    }
    getChannelDecoratorMetadata(instance, propertyKey) {
        return Reflect.getMetadata(channel_constant_1.CHANNEL_DECORATOR, instance, propertyKey);
    }
    getReactionCollectorDecoratorMetadata(instance) {
        return Reflect.getMetadata(reaction_collector_constant_1.REACTION_COLLECTOR_METADATA, instance);
    }
    getMessageCollectorDecoratorMetadata(instance) {
        return Reflect.getMetadata(message_collector_constant_1.MESSAGE_COLLECTOR_METADATA, instance);
    }
    getInteractionCollectorDecoratorMetadata(instance) {
        return Reflect.getMetadata(interaction_collector_constant_1.INTERACTION_COLLECTOR_METADATA, instance);
    }
    getUseCollectorsDecoratorMetadata(instance, methodName) {
        return Reflect.getMetadata(use_collectors_constant_1.USE_COLLECTORS_METADATA, instance, methodName);
    }
    getFiledDecoratorMetadata(instance, propertyKey) {
        return Reflect.getMetadata(field_constant_1.FIELD_DECORATOR, instance, propertyKey);
    }
    getTextInputValueDecoratorMetadata(instance, propertyKey) {
        return Reflect.getMetadata(text_input_value_constant_1.TEXT_INPUT_VALUE_DECORATOR, instance, propertyKey);
    }
};
ReflectMetadataProvider = __decorate([
    (0, common_1.Injectable)()
], ReflectMetadataProvider);
exports.ReflectMetadataProvider = ReflectMetadataProvider;
//# sourceMappingURL=reflect-metadata.provider.js.map