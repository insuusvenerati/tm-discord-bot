import { Type } from '@nestjs/common';
import { ChannelType, MessageChannelCollectorOptionsParams, MessageCollectorOptions, MessageComponentType } from 'discord.js';
import { DiscordReactionCollectorOptions } from '../decorators/collector/reaction-collector/reaction-collector-options';
import { CommandOptions } from '../decorators/command/command-options';
import { OnCollectDecoratorOptions } from '../decorators/event/on-collect-decorator-options';
import { OnDecoratorOptions } from '../decorators/event/on-decorator-options';
import { DiscordMiddleware } from '../decorators/middleware/discord-middleware';
import { MiddlewareOptions } from '../decorators/middleware/middleware-options';
import { FieldOptions } from '../decorators/modal/field/field-options';
import { NonParamOptions } from '../decorators/option/param/non-param-options';
import { NumericParamOptions } from '../decorators/option/param/numeric-param-options';
import { StringParamOptions } from '../decorators/option/param/string-param-options';
import { ParamTypeOptions } from '../decorators/param/param-type-options';
import { PrefixCommandOptions } from '../decorators/prefix-command/prefix-command-options';
import { SubCommandOptions } from '../decorators/sub-command/sub-command-options';
import { ArgNumOptions } from '../decorators/transformation/arg-num/arg-num-options';
import { ArgRangeOptions } from '../decorators/transformation/arg-range/arg-range-options';
import { FilterType } from '../definitions/types/filter.type';
import { GuardType } from '../definitions/types/guard.type';
import { PipeType } from '../definitions/types/pipe.type';
export declare class ReflectMetadataProvider {
    getCommandDecoratorMetadata(instance: InstanceType<any>): CommandOptions;
    getSubCommandDecoratorMetadata(instance: InstanceType<any>): SubCommandOptions;
    getOnEventDecoratorMetadata(instance: InstanceType<any>, methodName: string): OnDecoratorOptions;
    getOnceEventDecoratorMetadata(instance: InstanceType<any>, methodName: string): OnDecoratorOptions;
    getOnCommandDecoratorMetadata(instance: InstanceType<any>, methodName: string): PrefixCommandOptions;
    getArgNumDecoratorMetadata(instance: InstanceType<any>, propertyKey: string): (last?: number) => ArgNumOptions;
    getArgRangeDecoratorMetadata(instance: InstanceType<any>, propertyKey: string): (last?: number) => ArgRangeOptions;
    getOnCollectEventDecoratorMetadata(instance: InstanceType<any>, methodName: string): OnCollectDecoratorOptions;
    getOnceCollectEventDecoratorMetadata(instance: InstanceType<any>, methodName: string): OnCollectDecoratorOptions;
    getFilterDecoratorMetadata(instance: InstanceType<any>, methodName: string): Record<string, any>;
    getMiddlewareDecoratorMetadata(instance: DiscordMiddleware): MiddlewareOptions;
    getUseGuardsDecoratorMetadata(instance: InstanceType<any>, methodName?: string): GuardType[];
    getUsePipesDecoratorMetadata(instance: InstanceType<any>, methodName?: string): PipeType[];
    getUseFiltersDecoratorMetadata(instance: InstanceType<any>, methodName?: string): FilterType[];
    getCatchDecoratorMetadata(instance: InstanceType<any>): Type[];
    getParamTypesMetadata(instance: InstanceType<any>, methodName: string): Type[];
    getPropertyTypeMetadata(instance: InstanceType<any>, methodName: string): Type;
    getPayloadDecoratorMetadata(instance: InstanceType<any>, methodName: string): ParamTypeOptions;
    getParamDecoratorMetadata(instance: InstanceType<any>, propertyKey: string): NumericParamOptions & StringParamOptions & NonParamOptions;
    getChoiceDecoratorMetadata(instance: InstanceType<any>, propertyKey: string): Record<string, any> | Map<string, string | number>;
    getChannelDecoratorMetadata(instance: InstanceType<any>, propertyKey: string): ChannelType[];
    getReactionCollectorDecoratorMetadata(instance: InstanceType<any>): DiscordReactionCollectorOptions;
    getMessageCollectorDecoratorMetadata(instance: InstanceType<any>): MessageCollectorOptions;
    getInteractionCollectorDecoratorMetadata<T extends MessageComponentType>(instance: InstanceType<any>): MessageChannelCollectorOptionsParams<T, true>;
    getUseCollectorsDecoratorMetadata(instance: InstanceType<any>, methodName?: string): Type[];
    getFiledDecoratorMetadata(instance: InstanceType<any>, propertyKey: string): FieldOptions;
    getTextInputValueDecoratorMetadata(instance: InstanceType<any>, propertyKey: string): {
        customId?: string;
    };
}
