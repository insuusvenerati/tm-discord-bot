import { ModuleRef } from '@nestjs/core';
import { ApplicationCommandData } from 'discord.js';
import { CommandOptions } from '../decorators/command/command-options';
import { DiscordCommand } from '../definitions/interfaces/discord-command';
import { OptionExplorer } from '../explorers/option/option.explorer';
import { ReflectMetadataProvider } from '../providers/reflect-metadata.provider';
import { CommandTreeService } from './command-tree.service';
import { DtoService } from './dto.service';
export declare class BuildApplicationCommandService {
    private readonly moduleRef;
    private readonly metadataProvider;
    private readonly optionExplorer;
    private readonly commandTreeService;
    private readonly dtoService;
    constructor(moduleRef: ModuleRef, metadataProvider: ReflectMetadataProvider, optionExplorer: OptionExplorer, commandTreeService: CommandTreeService, dtoService: DtoService);
    exploreCommandOptions(instance: DiscordCommand, methodName: string, { name, description, include, dmPermission, defaultMemberPermissions, type, nameLocalizations, descriptionLocalizations, }: CommandOptions): Promise<ApplicationCommandData>;
    private exploreSubCommandOptions;
    private getSubCommandGroupOptions;
    private getSubCommandOptions;
    private sortByRequired;
}
