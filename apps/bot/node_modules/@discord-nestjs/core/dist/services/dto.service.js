"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DtoService = void 0;
const common_1 = require("@nestjs/common");
const core_1 = require("@nestjs/core");
const option_explorer_1 = require("../explorers/option/option.explorer");
const param_explorer_1 = require("../explorers/param/param.explorer");
let DtoService = class DtoService {
    constructor(paramExplorer, moduleRef, optionExplorer) {
        Object.defineProperty(this, "paramExplorer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: paramExplorer
        });
        Object.defineProperty(this, "moduleRef", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: moduleRef
        });
        Object.defineProperty(this, "optionExplorer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: optionExplorer
        });
    }
    createDtoInstance(instance, methodName) {
        return __awaiter(this, void 0, void 0, function* () {
            const payloadType = this.paramExplorer.getPayloadType(instance, methodName);
            if (!payloadType)
                return;
            return this.moduleRef.create(payloadType);
        });
    }
    exploreDtoOptions(dtoInstance) {
        const optionMetadata = this.optionExplorer.explore(dtoInstance);
        const commandOptions = [];
        for (const property in optionMetadata) {
            const propertyOptions = optionMetadata[property];
            const { name, description, required = false, type, minValue, maxValue, minLength, maxLength, autocomplete, nameLocalizations, descriptionLocalizations, } = propertyOptions.param;
            commandOptions.push({
                name,
                description,
                required,
                type,
                autocomplete,
                minValue,
                maxValue,
                minLength,
                maxLength,
                nameLocalizations,
                descriptionLocalizations,
                choices: propertyOptions.choice,
                channelTypes: propertyOptions.channelTypes,
            });
        }
        return commandOptions;
    }
};
DtoService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [param_explorer_1.ParamExplorer,
        core_1.ModuleRef,
        option_explorer_1.OptionExplorer])
], DtoService);
exports.DtoService = DtoService;
//# sourceMappingURL=dto.service.js.map