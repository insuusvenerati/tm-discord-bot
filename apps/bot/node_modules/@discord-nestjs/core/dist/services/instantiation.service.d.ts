import { Type } from '@nestjs/common';
import { DiscoveryService } from '@nestjs/core';
import { Module } from '@nestjs/core/injector/module';
import { FilterType } from '../definitions/types/filter.type';
import { GuardType } from '../definitions/types/guard.type';
import { PipeType } from '../definitions/types/pipe.type';
export declare class InstantiationService {
    private readonly discoveryService;
    constructor(discoveryService: DiscoveryService);
    getHostModule(baseClassInstance: InstanceType<any>): Module;
    exploreInstances(classTypeOrInstance: (PipeType | FilterType | GuardType | Type)[], hostModule: Module): Promise<InstanceType<any>[]>;
}
