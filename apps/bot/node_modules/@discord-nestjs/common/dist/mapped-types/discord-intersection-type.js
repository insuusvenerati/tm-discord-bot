"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiscordIntersectionType = void 0;
const mapped_types_1 = require("@nestjs/mapped-types");
function DiscordIntersectionType(classA, ...classRefs) {
    const classes = [classA, ...classRefs];
    const instances = classes.map((classType) => new classType());
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    const newType = (0, mapped_types_1.IntersectionType)(classA, ...classRefs);
    class Intersection extends newType {
        constructor(...args) {
            super(...args);
            Object.assign(this, ...instances);
            instances.forEach((instance) => {
                const properties = Object.keys(instance);
                properties.map((property) => {
                    Reflect.getMetadataKeys(instance, property).forEach((metadataKey) => {
                        const paramMetadata = Reflect.getMetadata(metadataKey, instance, property);
                        Reflect.defineMetadata(metadataKey, paramMetadata, this, property);
                    });
                });
            });
        }
    }
    return Intersection;
}
exports.DiscordIntersectionType = DiscordIntersectionType;
//# sourceMappingURL=discord-intersection-type.js.map